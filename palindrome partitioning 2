class Solution {
public:
    bool isPalindrome(int i, int j, string &s) {
        while (i < j) {
            if (s[i] != s[j]) return false;
            i++;
            j--;
        }
        return true;
    }
    int solve(vector<int>&dp,string s,int i, int j)
    {
        if(i==s.size())
            return 0;
        if(dp[i]!=-1)
            return dp[i];
        int res=1e9;
        for(int j=i;j<s.size();j++)
        {
            if(isPalindrome(i,j,s))
            {
                int ans=1+solve(dp,s,j+1,s.size());
                res=min(res,ans);
            }
        }
        return dp[i]=res;
    }
    int minCut(string s) {
        int n=s.size();
        vector<int>dp(n+1,0);
        for(int i=n-1;i>=0;i--)
        {
            int res=1e9;
            for(int j=i;j<n;j++)
            {
                if(isPalindrome(i,j,s))
                {
                    int ans=1+dp[j+1];
                    res=min(res,ans);
                }
            }
            dp[i]=res;
        }
        return dp[0]-1;
    }
};
