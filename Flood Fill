follow bfs
class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int n=image.size();
        int m=image[0].size();
        int oldcolor=image[sr][sc];
        if(oldcolor==color)
            return image;
        image[sr][sc]=color;
        queue<pair<int,int>>q;
        q.push({sr,sc});
        int dx[]={-1,0,1,0};
        int dy[]={0,1,0,-1};
        while(!q.empty())
        {
            auto p=q.front();
            int r=p.first;
            int c=p.second;
            q.pop();
            for(int i=0;i<4;i++)
            {
                int nr=dx[i]+r;
                int nc=dy[i]+c;
                if(nr>=0&&nr<n&&nc>=0&&nc<m&&image[nr][nc]!=color&&image[nr][nc]==oldcolor)
                {
                    q.push({nr,nc});
                    image[nr][nc]=color;
                }
            }
        }
        return image;
    }
};
