class Solution {
public:
    static bool cmp(vector<int>& a, vector<int> &b)
    {
        if(a[0]==b[0])
            return a[1]<b[1];
        return a[0]<b[0];
    }
    vector<int> maximumBeauty(vector<vector<int>>& items, vector<int>& queries) {
        sort(items.begin(),items.end(),cmp);
        vector<int>ans;
        for (int i = 1; i < items.size(); i++) {
            items[i][1] = max(items[i][1], items[i - 1][1]);
        }
        for(int i=0;i<items.size();i++)
        {
            cout<<items[i][0]<<" "<<items[i][1]<<"  ";
        }
        int n=items.size();
        for(int i=0;i<queries.size();i++)
        {
            int l=0,h=n-1;
            int res=-1e9;
            while(l<=h)
            {
                int m=(l+h)/2;
                if(items[m][0]<=queries[i])
                {
                    res=max(res,items[m][1]);
                    l=m+1;
                }
                else
                    h=m-1;
            }
            if(res==-1e9)
                ans.push_back(0);
            else
                ans.push_back(res);
        }
        return ans;
    }
};