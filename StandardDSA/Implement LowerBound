//Implementation of lowerbound 
//Given a sorted array of N integers and an integer x, write a program to find the lower bound of x.
//Input Format: N = 5, arr[] = {3,5,8,15,19}, x = 9
//Result: 3
//Explanation: Index 3 is the smallest index such that arr[3] >= x.
Approach-
1. Initialize low to 0 and high to n - 1.
2. Perform binary search iteration:
3. Calculate mid as (low + high) / 2.
4. If arr[mid] < x, update low = mid + 1.
5. If arr[mid] >= x, update high = mid.
6. Repeat step 2 until low < high.
7. Check if high == n - 1 for the edge case, return n.
8. Return the lower bound, high.




int lowerBound(vector<int> arr, int n, int x) {
	// Write your code here
	int low=0;
	int high=n-1;
	while(low<high)
	{
		int mid=(low+high)/2;
		if(arr[mid]<x)
		{
			low=mid+1;
		}
		else
		{
			high=mid;
		}
	}
	if(high==n-1)//for edge case if number is higher than all numbers of array
		return n;
	return high;
}
