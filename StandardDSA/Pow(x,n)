
//recursion
class Solution {
public:
    double myPow(double x, int m) {
        long long n=m;
        if(n==0)
            return 1;
        if(n==1)
            return x;
        if(n>0)
        {
            if(n%2==0)
            {
                return myPow(x,n/2)*myPow(x,n/2);
            }
            else
            {
                return (x*myPow(x,n-1));
            }
        }   
        return 1/myPow(x,(-1*n));
    }
};



//binary search
class Solution {
public:
    double myPow(double x, int n) {
        double res=1.0;
        long long m=n;
        if(m<0)
            m=-1*m;
        while(m>0)
        {
            if(m%2)
            {
                res=res*x;
                m--;
            }
            else
            {
                x=x*x;
                m=m/2;
            }
        }
        if(n<0)
        res=(double)1.0/(double)res;
        return res;
    }
};
