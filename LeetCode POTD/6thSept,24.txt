/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        set<int>st;
        fo r(auto it:nums)
        {
            st.insert(it);
        }   
        ListNode* temp1=new ListNode(-1,head); 
        ListNode* prev=temp1;
        ListNode* temp=head;
        while(temp)
        {
            if(st.contains(temp->val))
            {
                prev->next=temp->next;
            }
            else
                prev=temp;
            temp=temp->next;
        }
        return temp1->next;
    }
};