//Implement UpperBound
Initialize low to 0 and high to n.
Perform binary search iteration:
Calculate mid as (low + high) / 2.
If arr[mid] <= x, update low = mid + 1.
If arr[mid] > x, update high = mid.
Repeat step 2 until low < high.
Return the upper bound.


int upperBound(vector<int> &arr, int x, int n){
    int low = 0;
    int high = n ;
    while (low < high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] <= x) {
            low = mid + 1;
        } else {
            high = mid ;
        }
    }
    return low;    
}
