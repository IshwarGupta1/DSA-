Find first & last occurence and then just do last-first+1


int firstOccurence(vector<int>& nums, int target)
    {
        int low=0,high=nums.size()-1;
        int res=-1;
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(nums[mid]==target)
            {
                res=mid;
                high=mid-1;
            }
            else if(nums[mid]<target)
            {
                low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        return res;
    }
    int lastOccurence(vector<int>& nums, int target)
    {
        int low=0,high=nums.size()-1;
        int res=-1;
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(nums[mid]==target)
            {
                res=mid;
                low=mid+1;
            }
            else if(nums[mid]<target)
            {
                low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        return res;
    }
int count(vector<int>& arr, int n, int x) {
	// Write Your Code Here
	int l=firstOccurence(arr, x);
	int h=lastOccurence(arr, x);
	if(l==-1||h==-1)
		return 0;
	return h-l+1;
}
