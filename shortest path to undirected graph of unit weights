// User function Template for C++
class Solution {
  public:
    vector<int> shortestPath(vector<vector<int>>& edges, int N,int M, int src){
        // code here
        int n=N;
        vector<int> adj[n];
        for(auto it:edges)
        {
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        int dist[n];
        
        for(int i=0;i<n;i++)
            dist[i]=1e9;
        dist[src]=0;
        queue<int>q;
        q.push(src);
        while(!q.empty())
        {
            int node=q.front();
            q.pop();
            for(auto it:adj[node])
            {
                if(dist[node]+1<dist[it])
                {
                    dist[it]=dist[node]+1;
                    q.push(it);
                }
            }
        }
        vector<int>res(n,-1);
        for(int i=0;i<n;i++)
        {
            if(dist[i]!=1e9)
                res[i]=dist[i];
        }
        return res;
    }
};
