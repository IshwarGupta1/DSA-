class Solution {
public:
    static bool cmp(string &s1, string & s2)
    {
        return s1<s2;
    }
    int timeInMinutes(string &time) {
        int hours = (time[0] - '0') * 10 + (time[1] - '0');
        int minutes = (time[3] - '0') * 10 + (time[4] - '0');
        return hours * 60 + minutes;
    }
    int findMinDifference(vector<string>& timePoints) {
        sort(timePoints.begin(),timePoints.end());
        int n=timePoints.size();
        int res=1e9;
        for(int i=1;i<timePoints.size();i++)
        {
            cout<<timePoints[i-1]<<endl;
            int t1 = timeInMinutes(timePoints[i-1]);
            int t2 = timeInMinutes(timePoints[i]);
            cout<<t1<<" "<<t2<<endl;
            res=min(res,(t2-t1));
        }
        res=min(res,1440-(timeInMinutes(timePoints[n-1])-(timeInMinutes(timePoints[0]))));
        return res;
    }
};