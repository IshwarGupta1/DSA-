class Solution {
public:
    int solve(vector<int>& prices,int ind,int buy,int n,vector<vector<int>>&dp)
    {
        if(ind==n)
            return 0;
        int profit=0;
        if(dp[ind][buy]!=-1)
            return dp[ind][buy];
        
        else
             profit=max(solve(prices,ind+1,1,n,dp),prices[ind]+solve(prices,ind+1,0,n,dp));
        return dp[ind][buy]=profit;
    }
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        vector<int>ahead(2,-1);
        vector<int>curr(2,-1);
        ahead[0]=0;
        ahead[1]=0;
        for(int ind=n-1;ind>=0;ind--)
        {
            int profit=0;
            for(int j=0;j<2;j++)
            {
                if(j==0)
                {
                    profit=max(ahead[0],-prices[ind]+ahead[1]);
                }
                else
                {
                    profit=max(ahead[1],prices[ind]+ahead[0]);
                }
                curr[j]=profit;
            }
            ahead=curr;
        }
        return curr[0];
    }
};
